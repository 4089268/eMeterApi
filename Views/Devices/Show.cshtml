@using eMeterApi.Entities
@model eMeter.Models.DeviceDetails

@functions{
    DeviceDetails GetDetails()
    {
        return (DeviceDetails) ViewBag.Device;
    }
    Device GetDeviceInfo()
    {
        return GetDetails().Device;
    }

    string ValveButtonText(){
        var valveStatus = GetDeviceInfo().Valve switch
        {
            "open" => "Cerrar Valvula",
            "close" => "Abrir Valvula",
            _ => "No disponible"
        };
        return valveStatus;
    }
}

<div class="container-fluid dashboard-content">
    
    <!-- pageheader -->
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="page-header">
                <h1 class="mb-2">Detalle Medidor</h1>
                <p class="pageheader-text">Proin placerat ante duiullam scelerisque a velit ac porta, fusce sit amet vestibulum mi. Morbi lobortis pulvinar quam.</p>
                <div class="page-breadcrumb">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item" aria-current="page">
                                <a asp-action="Index" asp-asp-controller="Devices" class="breadcrumb-link">Devices</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">Device: @GetDeviceInfo().MeterAddress </li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- end pageheader -->
    
    
    <div class="row">
        <!-- device card  -->
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card influencer-profile-data">
                <div class="card-body">
                    <div class="row">
                        <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                            <div class="text-center">
                                <img src="/img/valve.png" alt="User Avatar" class="rounded-circle user-avatar-xxl" />
                            </div>
                        </div>
                        <div class="col-xl-10 col-lg-8 col-md-8 col-sm-8 col-12">
                            <div class="user-avatar-info">
                                <div class="m-b-20">
                                    <div class="user-avatar-name">
                                        <h2 class="mb-1">DEV @GetDeviceInfo().MeterAddress</h2>
                                    </div>
                                    <div class="rating-star d-inline-block">
                                        <p class="d-inline-block text-dark">@GetDeviceInfo().DeviceId</p>
                                    </div>
                                </div>
                                <!--  <div class="float-right"><a href="#" class="user-avatar-email text-secondary">www.henrybarbara.com</a></div> -->
                                <div class="user-avatar-address">
                                    <p class="border-bottom pb-3">
                                        <span class="mb-2 ml-xl-4 d-xl-inline-block d-block">
                                            <i class="fa fa-calendar-alt mr-2 text-primary"></i>
                                            <span class="m-l-0">Fecha Registro: <span class="text-uppercase">@GetDeviceInfo().CreatedAt.ToString("dd MMM yyyy")</span></span>
                                        </span>

                                        <span class="d-xl-inline-block d-block mb-2 ml-2">
                                            <i class="fa fa-calendar-alt mr-2 text-primary"></i>
                                            <span class="m-l-0">Ultima Actualizacion: @GetDeviceInfo().UpdatedAt.ToString("dd MMM yyyy - HH:mm:ss").ToUpper()</span>
                                        </span>

                                        <span class=" mb-2 d-xl-inline-block d-block ml-xl-4">
                                            <i class="fa fa-battery-half mr-2  text-primary"></i>
                                            <span class="m-l-0">Bateria: <span class="text-uppercase">@GetDeviceInfo().Battery </span></span>
                                        </span>

                                        <span class=" mb-2 d-xl-inline-block d-block ml-xl-4">
                                            <svg xmlns="http://www.w3.org/2000/svg" style="transform: translateY(2px); margin-right:.25rem;" width="18" height="16" viewBox="0 0 24 24">
                                                @switch( GetDeviceInfo().Valve ){
                                                    case "open":
                                                        <path fill="#0284c7" d="M4 22H2V2h2m18 0h-2v20h2M11 4v5.18a3 3 0 0 0 0 5.64V20h2v-5.18a3 3 0 0 0 0-5.64V4Z"/>
                                                        break;
                                                    case "close":
                                                        <path fill="#e11d48" d="M22 2v20h-2v-9h-5.18a3 3 0 0 1-5.64 0H4v9H2V2h2v9h5.18a3 3 0 0 1 5.64 0H20V2Z"/>
                                                        break;
                                                    default:
                                                        <path fill="#eab308" d="M4 22H2V2h2m18 0h-2v20h2M17.24 5.34l-4 4a3 3 0 0 0-4 4l-4 4l1.42 1.42l4-4a3 3 0 0 0 4-4l4-4Z"/>
                                                        break;
                                                }
                                            <svg>
                                            <span class="m-l-0">Valvula: <span class="text-uppercase">@GetDeviceInfo().Valve </span></span>
                                        </span>

                                        <span class=" mb-2 d-xl-inline-block d-block ml-xl-4">
                                            <i class="fa fa-map-marker-alt mr-2  text-primary"></i>
                                            <span class="m-l-0">Ubicacion: Ciudad, Estado </span>
                                        </span>
                                    </p>
                                    <div class="mt-3">
                                        <div class="mr-2 mt-1">
                                            @if(!string.IsNullOrEmpty(GetDeviceInfo().GroupId)){
                                                <a href="#" class="mr-1 px-3 badge badge-brand text-black-50"> @GetDeviceInfo().GroupId</a>
                                            }else{
                                                <a href="#" class="mr-1 px-3 badge badge-danger">No definido</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="border-top user-social-box">

                    <div class="px-2 d-inline-block ">

                        <div class="d-inline-block">
                        <form asp-action="SwitchValve" asp-controller="Devices" method="post">
                            <input type="hidden" name="deviceAddress" value="@GetDeviceInfo().MeterAddress" />
                            <button type="submit" class="btn btn-primary active">@ValveButtonText()</button>
                        </form>
                        </div>

                        <a href="#" class="btn btn-primary active">Exportar Datos</a>
                        <a href="#" class="btn btn-primary active">Generar Reporte</a>
                    </div>
                    
                    <div class="user-social-media d-xl-inline-block ">
                        <span class="mr-2 medium-color">
                            <i class="fab fa-medium"></i>
                        </span>
                        <span>123# Some Indicator</span>
                    </div>
                </div>
            </div>
        </div>
        <!-- device card  -->
    </div>


    <!-- Chart -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <h5 class="card-header">Registros por dia (ultimos 15 dias)</h5>
                <div class="card-body" style="height:14rem;">
                    <canvas id="chartMeasurement"></canvas>
                </div>
            </div>
        </div>
    </div>
    <!-- end chart -->

    


    <!-- Measurement table -->
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <h4 id="tableHeader" class="card-header">Ultimos registros</h5>
                <div class="card-body">
                    <div class="campaign-table table-responsive">
                        <table id="dataTable" class="table second table-striped table-bordered" >
                            <thead>
                                <tr class="border-0">
                                    <th class="border-0"></th>
                                    <th class="border-0">Meter Address</th>
                                    <th class="border-0">DataId</th>
                                    <th class="border-0">Cummulative Flow</th>
                                    <th class="border-0">CFUnit</th>
                                    <th class="border-0">Dayli C. Amount</th>
                                    <th class="border-0">DCFUnit</th>
                                    <th class="border-0">Flow Rate</th>
                                    <th class="border-0">FRUnit</th>
                                    <th class="border-0">Temperature</th>
                                    <th class="border-0">Dev Date</th>
                                    <th class="border-0">Dev Time</th>
                                    <th class="border-0">Valve</th>
                                    <th class="border-0">Battery</th>
                                    <th class="border-0">Reverse Flow</th>
                                    <th class="border-0">Over Range</th>
                                    <th class="border-0">Water Temp</th>
                                    <th class="border-0">EE Alarm</th>
                                    <th class="border-0">Registration Date</th>
                                    <th class="border-0">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach( Measurement measurement in GetDetails().Measurement )
                                {
                                <tr>
                                    <td>
                                        <div class="m-r-10">
                                            <img src="/img/valve.png" alt="valve" width="35">
                                        </div>
                                    </td>
                                    <td> @measurement.MeterAddress </td>
                                    <td> @measurement.DataId </td>
                                    <td> @measurement.CummulativeFlow.ToString("n2") </td>
                                    <td> @measurement.CfUnit </td>
                                    <td> @measurement.DayliCumulativeAmount.ToString("n2") </td>
                                    <td> @measurement.CfUnitSetDay</td>
                                    <td> @measurement.FlowRate.ToString("n2")</td>
                                    <td> @measurement.FlowRateUnit</td>
                                    <td> @measurement.Temperature.ToString("n2")</td>
                                    <td> @measurement.DevDate</td>
                                    <td> @measurement.DevTime</td>
                                    <td> @measurement.Valve.ToUpper()</td>
                                    <td> @measurement.Battery.ToUpper()</td>
                                    <td> @measurement.ReverseFlow.ToUpper()</td>
                                    <td> @measurement.OverRange.ToUpper()</td>
                                    <td> @measurement.WaterTemp.ToUpper()</td>
                                    <td> @measurement.Eealarm.ToUpper()</td>
                                    <td> @measurement.RegistrationDate</td>
                                    <td>
                                        @*
                                        <div class="dropdown float-right">
                                            <a href="#" class="dropdown-toggle card-drop" data-toggle="dropdown" aria-expanded="true">
                                                <i class="mdi mdi-dots-vertical"></i>
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right">
                                                <!-- item-->
                                                <a href="javascript:void(0);" class="dropdown-item">Sales Report</a>
                                                <!-- item-->
                                                <a href="javascript:void(0);" class="dropdown-item">Export Report</a>
                                                <!-- item-->
                                                <a href="javascript:void(0);" class="dropdown-item">Profit</a>
                                                <!-- item-->
                                                <a href="javascript:void(0);" class="dropdown-item">Action</a>
                                            </div>
                                        </div>
                                        *@
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end table -->
    
</div>


@section Scripts {
    <script src="/assets/vendor/charts/chartist-bundle/chartist.min.js"></script>

    <script src="/assets/vendor/charts/charts-bundle/Chart.bundle.js"></script>

    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="/assets/vendor/datatables/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="/assets/vendor/datatables/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.0.4/js/dataTables.rowGroup.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.5/js/dataTables.fixedHeader.min.js"></script>

    
    <script>

        var _chartData = @Html.Raw( Json.Serialize(ViewBag.ChartData));
        
        function initDataTable(){
            if ($("#dataTable").length) {
                var table = $('#dataTable').DataTable({
                    lengthChange: false,
                    buttons: ['copy', 'excel', 'pdf', 'print' ],
                    searching: false,
                    paging: true,
                    pageLength: 100
                });
                table.buttons().container().appendTo('#dataTable_wrapper .col-md-6:eq(0)');
            }
        }
        
        function initChart(){
            if ($('#chartMeasurement').length) {
                var ctx = document.getElementById('chartMeasurement').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: [ ..._chartData.map( item => item.key) ],
                        datasets: [
                            {
                                label: 'Registros',
                                data: [ ..._chartData.map( item => item.value) ],
                                backgroundColor: "rgba(89, 105, 255,0.5)",
                                borderColor: "rgba(89, 105, 255,0.7)",
                                borderWidth: 2
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        legend: {
                            display: true,
                            position: 'bottom',
                            labels: {
                                fontColor: '#71748d',
                                fontFamily: 'Circular Std Book',
                                fontSize: 14,
                            }
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 14,
                                    fontFamily: 'Circular Std Book',
                                    fontColor: '#71748d',
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    fontSize: 14,
                                    fontFamily: 'Circular Std Book',
                                    fontColor: '#71748d',
                                }
                            }]
                        }
                    }
                });
            }
        }

        $(document).ready(()=>{
            initDataTable();
            initChart();
        });
        
    </script>
}
